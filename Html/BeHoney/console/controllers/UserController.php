<?php

namespace console\controllers;

use console\base\Controller as Controller;
use console\models\User;
use Yii;
use yii\helpers\Console;

/**
 * Allows you to manipulate with database users.
 */
class UserController extends Controller
{
    /**
     * Creates new user.
     * @param string $username user login.
     * @param string $email user email.
     * @param bool $isAdmin whether new user will be admin or not.
     * @param string $password new user password. Random password will be generated by default.
     */
    public function actionCreate($username, $email, $isAdmin = false, $password = null)
    {
        $user = new User;
        $user->username = $username;
        $user->email = $email;
        $user->role = $isAdmin ? User::ROLE_ADMIN : User::ROLE_USER;
        $user->setPassword($password = $this->getNewPassword($password));

        if (!$user->getDb()->transaction([$user, 'save'])) {
            $this->stderr('Cannot save user. '.implode(' ', $user->getFirstErrors())."\n", Console::FG_RED);
        } else {
            $this->stdout("User has been successfully saved. Your credentials:\n", Console::FG_GREEN);
            $this->stdoutUserCredentials($user, $password);
        }
    }

    /**
     * Changes password for user.
     * @param string $username user login.
     * @param string $password new user password. Random password will be generated by default.
     */
    public function actionChangePass($username, $password = null)
    {
        $user = User::findByUsername($username);
        
        if (!$user) {
            $this->stderr("Cannot find user by username: '$username'.\n", Console::FG_RED, Console::UNDERLINE);
            return;
        }

        $user->setPassword($password = $this->getNewPassword($password));

        if (!$user->getDb()->transaction([$user, 'save'])) {
            $this->stderr('Cannot change password. '.implode(' ', $user->getFirstErrors())."\n", Console::FG_RED);
        } else {
            $this->stdout("User password has been successfully saved. Your credentials:\n", Console::FG_GREEN);
            $this->stdoutUserCredentials($user, $password);
        }
    }

    /**
     * Return new password. Generates new if input param `$password` is null.
     * @param string $password
     * @return string new password for user.
     */
    protected function getNewPassword($password = null)
    {
        return $password === null ? Yii::$app->security->generateRandomString(8) : $password;
    }

    /**
     * @param User $user
     * @param string $password
     */
    protected function stdoutUserCredentials($user, $password)
    {
        $this->stdout('Username: ');
        $this->stdout("$user->username\n", Console::FG_YELLOW);
        $this->stdout('Email: ');
        $this->stdout("$user->email\n", Console::FG_YELLOW);
        $this->stdout('Password: ');
        $this->stdout("$password\n", Console::FG_YELLOW);
        $this->stdout("Done.\n");
    }
}
